/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PoliciesTermsOfUseImport } from './routes/policies/terms-of-use'
import { Route as PoliciesDataPrivacyImport } from './routes/policies/data-privacy'
import { Route as PoliciesCookiesPolicyImport } from './routes/policies/cookies-policy'

// Create Virtual Routes

const ShopLazyImport = createFileRoute('/shop')()
const ProductsLazyImport = createFileRoute('/products')()
const PharmaciesLazyImport = createFileRoute('/pharmacies')()
const MerchLazyImport = createFileRoute('/merch')()
const ImprintLazyImport = createFileRoute('/imprint')()
const HeadShopLazyImport = createFileRoute('/headShop')()
const GrowEquipmentLazyImport = createFileRoute('/growEquipment')()
const DoctorsLazyImport = createFileRoute('/doctors')()
const AdminDashboardLazyImport = createFileRoute('/adminDashboard')()
const AboutLazyImport = createFileRoute('/about')()
const ProductsIdLazyImport = createFileRoute('/products/$id')()
const PharmacyDetailIdLazyImport = createFileRoute('/pharmacyDetail/$id')()
const HeadShopDetailIdLazyImport = createFileRoute('/headShopDetail/$id')()
const GrowEquipmentDetailIdLazyImport = createFileRoute(
  '/growEquipmentDetail/$id',
)()
const DoctorDetailIdLazyImport = createFileRoute('/doctorDetail/$id')()
const DetailShopShopLazyImport = createFileRoute('/detailShop/$shop')()
const DetailProductLazyImport = createFileRoute('/detail/$product')()

// Create/Update Routes

const ShopLazyRoute = ShopLazyImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/shop.lazy').then((d) => d.Route))

const ProductsLazyRoute = ProductsLazyImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/products.lazy').then((d) => d.Route))

const PharmaciesLazyRoute = PharmaciesLazyImport.update({
  id: '/pharmacies',
  path: '/pharmacies',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pharmacies.lazy').then((d) => d.Route))

const MerchLazyRoute = MerchLazyImport.update({
  id: '/merch',
  path: '/merch',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/merch.lazy').then((d) => d.Route))

const ImprintLazyRoute = ImprintLazyImport.update({
  id: '/imprint',
  path: '/imprint',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/imprint.lazy').then((d) => d.Route))

const HeadShopLazyRoute = HeadShopLazyImport.update({
  id: '/headShop',
  path: '/headShop',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/headShop.lazy').then((d) => d.Route))

const GrowEquipmentLazyRoute = GrowEquipmentLazyImport.update({
  id: '/growEquipment',
  path: '/growEquipment',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/growEquipment.lazy').then((d) => d.Route))

const DoctorsLazyRoute = DoctorsLazyImport.update({
  id: '/doctors',
  path: '/doctors',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/doctors.lazy').then((d) => d.Route))

const AdminDashboardLazyRoute = AdminDashboardLazyImport.update({
  id: '/adminDashboard',
  path: '/adminDashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/adminDashboard.lazy').then((d) => d.Route),
)

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIdLazyRoute = ProductsIdLazyImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ProductsLazyRoute,
} as any).lazy(() => import('./routes/products.$id.lazy').then((d) => d.Route))

const PharmacyDetailIdLazyRoute = PharmacyDetailIdLazyImport.update({
  id: '/pharmacyDetail/$id',
  path: '/pharmacyDetail/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/pharmacyDetail.$id.lazy').then((d) => d.Route),
)

const HeadShopDetailIdLazyRoute = HeadShopDetailIdLazyImport.update({
  id: '/headShopDetail/$id',
  path: '/headShopDetail/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/headShopDetail.$id.lazy').then((d) => d.Route),
)

const GrowEquipmentDetailIdLazyRoute = GrowEquipmentDetailIdLazyImport.update({
  id: '/growEquipmentDetail/$id',
  path: '/growEquipmentDetail/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/growEquipmentDetail.$id.lazy').then((d) => d.Route),
)

const DoctorDetailIdLazyRoute = DoctorDetailIdLazyImport.update({
  id: '/doctorDetail/$id',
  path: '/doctorDetail/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/doctorDetail.$id.lazy').then((d) => d.Route),
)

const DetailShopShopLazyRoute = DetailShopShopLazyImport.update({
  id: '/detailShop/$shop',
  path: '/detailShop/$shop',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/detailShop.$shop.lazy').then((d) => d.Route),
)

const DetailProductLazyRoute = DetailProductLazyImport.update({
  id: '/detail/$product',
  path: '/detail/$product',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/detail.$product.lazy').then((d) => d.Route),
)

const PoliciesTermsOfUseRoute = PoliciesTermsOfUseImport.update({
  id: '/policies/terms-of-use',
  path: '/policies/terms-of-use',
  getParentRoute: () => rootRoute,
} as any)

const PoliciesDataPrivacyRoute = PoliciesDataPrivacyImport.update({
  id: '/policies/data-privacy',
  path: '/policies/data-privacy',
  getParentRoute: () => rootRoute,
} as any)

const PoliciesCookiesPolicyRoute = PoliciesCookiesPolicyImport.update({
  id: '/policies/cookies-policy',
  path: '/policies/cookies-policy',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/adminDashboard': {
      id: '/adminDashboard'
      path: '/adminDashboard'
      fullPath: '/adminDashboard'
      preLoaderRoute: typeof AdminDashboardLazyImport
      parentRoute: typeof rootRoute
    }
    '/doctors': {
      id: '/doctors'
      path: '/doctors'
      fullPath: '/doctors'
      preLoaderRoute: typeof DoctorsLazyImport
      parentRoute: typeof rootRoute
    }
    '/growEquipment': {
      id: '/growEquipment'
      path: '/growEquipment'
      fullPath: '/growEquipment'
      preLoaderRoute: typeof GrowEquipmentLazyImport
      parentRoute: typeof rootRoute
    }
    '/headShop': {
      id: '/headShop'
      path: '/headShop'
      fullPath: '/headShop'
      preLoaderRoute: typeof HeadShopLazyImport
      parentRoute: typeof rootRoute
    }
    '/imprint': {
      id: '/imprint'
      path: '/imprint'
      fullPath: '/imprint'
      preLoaderRoute: typeof ImprintLazyImport
      parentRoute: typeof rootRoute
    }
    '/merch': {
      id: '/merch'
      path: '/merch'
      fullPath: '/merch'
      preLoaderRoute: typeof MerchLazyImport
      parentRoute: typeof rootRoute
    }
    '/pharmacies': {
      id: '/pharmacies'
      path: '/pharmacies'
      fullPath: '/pharmacies'
      preLoaderRoute: typeof PharmaciesLazyImport
      parentRoute: typeof rootRoute
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsLazyImport
      parentRoute: typeof rootRoute
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopLazyImport
      parentRoute: typeof rootRoute
    }
    '/policies/cookies-policy': {
      id: '/policies/cookies-policy'
      path: '/policies/cookies-policy'
      fullPath: '/policies/cookies-policy'
      preLoaderRoute: typeof PoliciesCookiesPolicyImport
      parentRoute: typeof rootRoute
    }
    '/policies/data-privacy': {
      id: '/policies/data-privacy'
      path: '/policies/data-privacy'
      fullPath: '/policies/data-privacy'
      preLoaderRoute: typeof PoliciesDataPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/policies/terms-of-use': {
      id: '/policies/terms-of-use'
      path: '/policies/terms-of-use'
      fullPath: '/policies/terms-of-use'
      preLoaderRoute: typeof PoliciesTermsOfUseImport
      parentRoute: typeof rootRoute
    }
    '/detail/$product': {
      id: '/detail/$product'
      path: '/detail/$product'
      fullPath: '/detail/$product'
      preLoaderRoute: typeof DetailProductLazyImport
      parentRoute: typeof rootRoute
    }
    '/detailShop/$shop': {
      id: '/detailShop/$shop'
      path: '/detailShop/$shop'
      fullPath: '/detailShop/$shop'
      preLoaderRoute: typeof DetailShopShopLazyImport
      parentRoute: typeof rootRoute
    }
    '/doctorDetail/$id': {
      id: '/doctorDetail/$id'
      path: '/doctorDetail/$id'
      fullPath: '/doctorDetail/$id'
      preLoaderRoute: typeof DoctorDetailIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/growEquipmentDetail/$id': {
      id: '/growEquipmentDetail/$id'
      path: '/growEquipmentDetail/$id'
      fullPath: '/growEquipmentDetail/$id'
      preLoaderRoute: typeof GrowEquipmentDetailIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/headShopDetail/$id': {
      id: '/headShopDetail/$id'
      path: '/headShopDetail/$id'
      fullPath: '/headShopDetail/$id'
      preLoaderRoute: typeof HeadShopDetailIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/pharmacyDetail/$id': {
      id: '/pharmacyDetail/$id'
      path: '/pharmacyDetail/$id'
      fullPath: '/pharmacyDetail/$id'
      preLoaderRoute: typeof PharmacyDetailIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/$id': {
      id: '/products/$id'
      path: '/$id'
      fullPath: '/products/$id'
      preLoaderRoute: typeof ProductsIdLazyImport
      parentRoute: typeof ProductsLazyImport
    }
  }
}

// Create and export the route tree

interface ProductsLazyRouteChildren {
  ProductsIdLazyRoute: typeof ProductsIdLazyRoute
}

const ProductsLazyRouteChildren: ProductsLazyRouteChildren = {
  ProductsIdLazyRoute: ProductsIdLazyRoute,
}

const ProductsLazyRouteWithChildren = ProductsLazyRoute._addFileChildren(
  ProductsLazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/adminDashboard': typeof AdminDashboardLazyRoute
  '/doctors': typeof DoctorsLazyRoute
  '/growEquipment': typeof GrowEquipmentLazyRoute
  '/headShop': typeof HeadShopLazyRoute
  '/imprint': typeof ImprintLazyRoute
  '/merch': typeof MerchLazyRoute
  '/pharmacies': typeof PharmaciesLazyRoute
  '/products': typeof ProductsLazyRouteWithChildren
  '/shop': typeof ShopLazyRoute
  '/policies/cookies-policy': typeof PoliciesCookiesPolicyRoute
  '/policies/data-privacy': typeof PoliciesDataPrivacyRoute
  '/policies/terms-of-use': typeof PoliciesTermsOfUseRoute
  '/detail/$product': typeof DetailProductLazyRoute
  '/detailShop/$shop': typeof DetailShopShopLazyRoute
  '/doctorDetail/$id': typeof DoctorDetailIdLazyRoute
  '/growEquipmentDetail/$id': typeof GrowEquipmentDetailIdLazyRoute
  '/headShopDetail/$id': typeof HeadShopDetailIdLazyRoute
  '/pharmacyDetail/$id': typeof PharmacyDetailIdLazyRoute
  '/products/$id': typeof ProductsIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/adminDashboard': typeof AdminDashboardLazyRoute
  '/doctors': typeof DoctorsLazyRoute
  '/growEquipment': typeof GrowEquipmentLazyRoute
  '/headShop': typeof HeadShopLazyRoute
  '/imprint': typeof ImprintLazyRoute
  '/merch': typeof MerchLazyRoute
  '/pharmacies': typeof PharmaciesLazyRoute
  '/products': typeof ProductsLazyRouteWithChildren
  '/shop': typeof ShopLazyRoute
  '/policies/cookies-policy': typeof PoliciesCookiesPolicyRoute
  '/policies/data-privacy': typeof PoliciesDataPrivacyRoute
  '/policies/terms-of-use': typeof PoliciesTermsOfUseRoute
  '/detail/$product': typeof DetailProductLazyRoute
  '/detailShop/$shop': typeof DetailShopShopLazyRoute
  '/doctorDetail/$id': typeof DoctorDetailIdLazyRoute
  '/growEquipmentDetail/$id': typeof GrowEquipmentDetailIdLazyRoute
  '/headShopDetail/$id': typeof HeadShopDetailIdLazyRoute
  '/pharmacyDetail/$id': typeof PharmacyDetailIdLazyRoute
  '/products/$id': typeof ProductsIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/adminDashboard': typeof AdminDashboardLazyRoute
  '/doctors': typeof DoctorsLazyRoute
  '/growEquipment': typeof GrowEquipmentLazyRoute
  '/headShop': typeof HeadShopLazyRoute
  '/imprint': typeof ImprintLazyRoute
  '/merch': typeof MerchLazyRoute
  '/pharmacies': typeof PharmaciesLazyRoute
  '/products': typeof ProductsLazyRouteWithChildren
  '/shop': typeof ShopLazyRoute
  '/policies/cookies-policy': typeof PoliciesCookiesPolicyRoute
  '/policies/data-privacy': typeof PoliciesDataPrivacyRoute
  '/policies/terms-of-use': typeof PoliciesTermsOfUseRoute
  '/detail/$product': typeof DetailProductLazyRoute
  '/detailShop/$shop': typeof DetailShopShopLazyRoute
  '/doctorDetail/$id': typeof DoctorDetailIdLazyRoute
  '/growEquipmentDetail/$id': typeof GrowEquipmentDetailIdLazyRoute
  '/headShopDetail/$id': typeof HeadShopDetailIdLazyRoute
  '/pharmacyDetail/$id': typeof PharmacyDetailIdLazyRoute
  '/products/$id': typeof ProductsIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/adminDashboard'
    | '/doctors'
    | '/growEquipment'
    | '/headShop'
    | '/imprint'
    | '/merch'
    | '/pharmacies'
    | '/products'
    | '/shop'
    | '/policies/cookies-policy'
    | '/policies/data-privacy'
    | '/policies/terms-of-use'
    | '/detail/$product'
    | '/detailShop/$shop'
    | '/doctorDetail/$id'
    | '/growEquipmentDetail/$id'
    | '/headShopDetail/$id'
    | '/pharmacyDetail/$id'
    | '/products/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/adminDashboard'
    | '/doctors'
    | '/growEquipment'
    | '/headShop'
    | '/imprint'
    | '/merch'
    | '/pharmacies'
    | '/products'
    | '/shop'
    | '/policies/cookies-policy'
    | '/policies/data-privacy'
    | '/policies/terms-of-use'
    | '/detail/$product'
    | '/detailShop/$shop'
    | '/doctorDetail/$id'
    | '/growEquipmentDetail/$id'
    | '/headShopDetail/$id'
    | '/pharmacyDetail/$id'
    | '/products/$id'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/adminDashboard'
    | '/doctors'
    | '/growEquipment'
    | '/headShop'
    | '/imprint'
    | '/merch'
    | '/pharmacies'
    | '/products'
    | '/shop'
    | '/policies/cookies-policy'
    | '/policies/data-privacy'
    | '/policies/terms-of-use'
    | '/detail/$product'
    | '/detailShop/$shop'
    | '/doctorDetail/$id'
    | '/growEquipmentDetail/$id'
    | '/headShopDetail/$id'
    | '/pharmacyDetail/$id'
    | '/products/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AdminDashboardLazyRoute: typeof AdminDashboardLazyRoute
  DoctorsLazyRoute: typeof DoctorsLazyRoute
  GrowEquipmentLazyRoute: typeof GrowEquipmentLazyRoute
  HeadShopLazyRoute: typeof HeadShopLazyRoute
  ImprintLazyRoute: typeof ImprintLazyRoute
  MerchLazyRoute: typeof MerchLazyRoute
  PharmaciesLazyRoute: typeof PharmaciesLazyRoute
  ProductsLazyRoute: typeof ProductsLazyRouteWithChildren
  ShopLazyRoute: typeof ShopLazyRoute
  PoliciesCookiesPolicyRoute: typeof PoliciesCookiesPolicyRoute
  PoliciesDataPrivacyRoute: typeof PoliciesDataPrivacyRoute
  PoliciesTermsOfUseRoute: typeof PoliciesTermsOfUseRoute
  DetailProductLazyRoute: typeof DetailProductLazyRoute
  DetailShopShopLazyRoute: typeof DetailShopShopLazyRoute
  DoctorDetailIdLazyRoute: typeof DoctorDetailIdLazyRoute
  GrowEquipmentDetailIdLazyRoute: typeof GrowEquipmentDetailIdLazyRoute
  HeadShopDetailIdLazyRoute: typeof HeadShopDetailIdLazyRoute
  PharmacyDetailIdLazyRoute: typeof PharmacyDetailIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  AdminDashboardLazyRoute: AdminDashboardLazyRoute,
  DoctorsLazyRoute: DoctorsLazyRoute,
  GrowEquipmentLazyRoute: GrowEquipmentLazyRoute,
  HeadShopLazyRoute: HeadShopLazyRoute,
  ImprintLazyRoute: ImprintLazyRoute,
  MerchLazyRoute: MerchLazyRoute,
  PharmaciesLazyRoute: PharmaciesLazyRoute,
  ProductsLazyRoute: ProductsLazyRouteWithChildren,
  ShopLazyRoute: ShopLazyRoute,
  PoliciesCookiesPolicyRoute: PoliciesCookiesPolicyRoute,
  PoliciesDataPrivacyRoute: PoliciesDataPrivacyRoute,
  PoliciesTermsOfUseRoute: PoliciesTermsOfUseRoute,
  DetailProductLazyRoute: DetailProductLazyRoute,
  DetailShopShopLazyRoute: DetailShopShopLazyRoute,
  DoctorDetailIdLazyRoute: DoctorDetailIdLazyRoute,
  GrowEquipmentDetailIdLazyRoute: GrowEquipmentDetailIdLazyRoute,
  HeadShopDetailIdLazyRoute: HeadShopDetailIdLazyRoute,
  PharmacyDetailIdLazyRoute: PharmacyDetailIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/adminDashboard",
        "/doctors",
        "/growEquipment",
        "/headShop",
        "/imprint",
        "/merch",
        "/pharmacies",
        "/products",
        "/shop",
        "/policies/cookies-policy",
        "/policies/data-privacy",
        "/policies/terms-of-use",
        "/detail/$product",
        "/detailShop/$shop",
        "/doctorDetail/$id",
        "/growEquipmentDetail/$id",
        "/headShopDetail/$id",
        "/pharmacyDetail/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/adminDashboard": {
      "filePath": "adminDashboard.lazy.tsx"
    },
    "/doctors": {
      "filePath": "doctors.lazy.tsx"
    },
    "/growEquipment": {
      "filePath": "growEquipment.lazy.tsx"
    },
    "/headShop": {
      "filePath": "headShop.lazy.tsx"
    },
    "/imprint": {
      "filePath": "imprint.lazy.tsx"
    },
    "/merch": {
      "filePath": "merch.lazy.tsx"
    },
    "/pharmacies": {
      "filePath": "pharmacies.lazy.tsx"
    },
    "/products": {
      "filePath": "products.lazy.tsx",
      "children": [
        "/products/$id"
      ]
    },
    "/shop": {
      "filePath": "shop.lazy.tsx"
    },
    "/policies/cookies-policy": {
      "filePath": "policies/cookies-policy.tsx"
    },
    "/policies/data-privacy": {
      "filePath": "policies/data-privacy.tsx"
    },
    "/policies/terms-of-use": {
      "filePath": "policies/terms-of-use.tsx"
    },
    "/detail/$product": {
      "filePath": "detail.$product.lazy.tsx"
    },
    "/detailShop/$shop": {
      "filePath": "detailShop.$shop.lazy.tsx"
    },
    "/doctorDetail/$id": {
      "filePath": "doctorDetail.$id.lazy.tsx"
    },
    "/growEquipmentDetail/$id": {
      "filePath": "growEquipmentDetail.$id.lazy.tsx"
    },
    "/headShopDetail/$id": {
      "filePath": "headShopDetail.$id.lazy.tsx"
    },
    "/pharmacyDetail/$id": {
      "filePath": "pharmacyDetail.$id.lazy.tsx"
    },
    "/products/$id": {
      "filePath": "products.$id.lazy.tsx",
      "parent": "/products"
    }
  }
}
ROUTE_MANIFEST_END */
